<?xml version="1.0" encoding="UTF-8"?><?asciidoc-toc maxdepth="2"?><?asciidoc-numbered?><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>PortX JD Edwards Connector for Mule 4 - Getting Started Guide</title>
<date>2019-04-25</date>
</info>

<section xml:id="__emphasis_role_strong_introduction_emphasis">
<title><emphasis role="strong">Introduction</emphasis></title>
<simpara>The <emphasis>PortX JDE Connector</emphasis> leverages the internal capabilities of Oracle’s <emphasis>JD Edwards EnterpriseOne™</emphasis> solution to a broader extent, and uses the power of Oracle’s Java Dynamic Connector to provide interoperability with <emphasis>JD Edwards EnterpriseOne™</emphasis> and external systems.</simpara>
<simpara>After reading this guide, you should be able to accomplish the following scenarios:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Log into <emphasis>JD Edwards EnterpriseOne™</emphasis></simpara>
</listitem>
<listitem>
<simpara>Invoke a Business Function (BSFN) on the server by passing it parameters.</simpara>
</listitem>
<listitem>
<simpara>Invoke a Business Function (BSFN) on the server using Transaction Processing.</simpara>
</listitem>
<listitem>
<simpara>Invoke a UBE by name.</simpara>
</listitem>
<listitem>
<simpara>Check a UBE call’s status asynchronously.</simpara>
</listitem>
<listitem>
<simpara>Poll Events.</simpara>
</listitem>
<listitem>
<simpara>Poll EDI Events.</simpara>
</listitem>
<listitem>
<simpara>Log out.</simpara>
</listitem>
</orderedlist>
<simpara>At design time, the <emphasis>PortX</emphasis> <emphasis>JDE Connector</emphasis> allows you to discover functions by name providing full access to all Business Function signatures. Given that discovery is a heavy duty process, the Connector manages a cache repository for all function’s metadata used at least once.</simpara>
<simpara>The results of a function call will be injected into the flow as a Map containing key-value pairs with the invocation’s output values. This approach gives the end user freedom of choice to construct complex flows and manage custom exception strategies.</simpara>
<section xml:id="_prerequisites">
<title>Prerequisites</title>
<simpara>This document assumes that you are familiar with Oracle’s <emphasis>JD Edwards EnterpriseOne™</emphasis> basics, Mule the <link xlink:href="https://docs.mulesoft.com/anypoint-studio/v/6/download-and-launch-anypoint-studio">Anypoint™ Studio</link> interface.</simpara>
</section>
<section xml:id="_requirements">
<title>Requirements</title>
<itemizedlist>
<listitem>
<simpara>Mule 4.1 server Runtime or higher</simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">Java JDK 1.8</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://www.mulesoft.com/lp/dl/studio">AnyPoint Studio™ 7.x or higher</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://maven.apache.org/download.cgi">Maven</link> 3.3.9 or higher (do not use the embedded Maven for AnyPoint Studio)</simpara>
<itemizedlist>
<listitem>
<simpara>For a easy installation tutorial see <link xlink:href="https://www.mkyong.com/maven/how-to-install-maven-in-windows/">How to install Maven for Windows</link></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Access to your Oracle’s <emphasis>JD Edwards EnterpriseOne™</emphasis> installation java libraries</simpara>
</listitem>
<listitem>
<simpara>As the connector is based on Oracle’s JD Edwards EnterpriseOne interoperability solution, the below settings need to be reviewed/changed.</simpara>
<itemizedlist>
<listitem>
<simpara>XML Dispatch Kernel</simpara>
</listitem>
<listitem>
<simpara>The XML CallObject kernel</simpara>
</listitem>
<listitem>
<simpara>The XML Transaction kernel</simpara>
</listitem>
<listitem>
<simpara>The XML List kernel</simpara>
</listitem>
<listitem>
<simpara>XMLLookupInfo section for XML Request type 7 inside jde.ini To activate Submit UBE.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Environment Variables that need to be set</simpara>
<itemizedlist>
<listitem>
<simpara>M2_REPO points to your local Maven repository (typically ~/.m2/repository)</simpara>
</listitem>
<listitem>
<simpara>PATH Variable</simpara>
<itemizedlist>
<listitem>
<simpara>~/JDK 1.8_nnn/bin</simpara>
</listitem>
<listitem>
<simpara>~/MAVEN_HOME/bin</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Other considerations</simpara>
<itemizedlist>
<listitem>
<simpara>AnyPoint Studio</simpara>
<itemizedlist>
<listitem>
<simpara>Your AnyPoint Studio workspace location and install location, should not contain any spaces, or underscorses eg: <emphasis>C:\AnyPoint_Studio\Workspace</emphasis></simpara>
</listitem>
<listitem>
<simpara>If you start AnyPoint studio, and receive the below message</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="174" contentwidth="500" fileref="images/jde-onboarding/image1_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Add the highlighted arguments to you AnyPointStudio.ini file, located in the AnyPointStudio installation folder (C:\Java\InstallPath\jdk1.8.0_201 is the path where your JDK is installed. Remember to add the \bin)</simpara>
<programlisting language="java" linenumbering="unnumbered">. . .
-startup
plugins/org.eclipse.equinox.launcher_1.4.0.v20161219-1356.jar
--launcher.library
plugins/org.eclipse.equinox.launcher.win32.win32.x86_64_1.1.551.v20171108-1834
-vm
C:\Java\InstallPath\jdk1.8.0_201\bin
-vmargs
--add-modules=ALL-SYSTEM
-Xms512m
-Xmx1024m
-XX:MaxPermSize=512m
-Dosgi.instance.area.default=@user.home/AnypointStudio/studio-workspace
-Dhttps.protocols=TLSv1,TLSv1.1,TLSv1.2
-Dsun.zip.disableMemoryMapping=true
-Dequinox.resolver.revision.batch.size=1
-Dmule.testingMode=true
-Dorg.mule.tooling.runtime.args=-XX:-UseBiasedLocking
-Dorg.mule.tooling.runtime.proxyVmArgs=-Dcom.ning.http.client.AsyncHttpClientConfig.useProxyProperties=true
-Djdk.http.auth.tunneling.disabledSchemes=
-XX:ErrorFile=./studio_crash_report.log
-Dorg.mule.tooling.client.usecache=true
-Dtooling.concurrent.local.repository.enabled=false</programlisting>
</section>
<section xml:id="_compatibility">
<title>Compatibility</title>
<simpara>Oracle’s <emphasis>JD Edwards EnterpriseOne™</emphasis> Tools Release 8.98 Update 4 and onwards</simpara>
</section>
</section>
<section xml:id="__emphasis_role_strong_preliminary_setup_emphasis">
<title><emphasis role="strong">Preliminary Setup</emphasis></title>
<simpara>In addition to meeting the requirements listed in the Prerequisites section, a bundle has to be created to establish a connection to the JDE Enterprise Server. This bundle will be created only for the first time and it can be reused in other applications.</simpara>
<simpara>This adapter is a bundle of JAR files that comes with the <emphasis>JD Edwards EnterpriseOne</emphasis>™ distribution.</simpara>
<simpara>These steps illustrate how to create bundle connector component so that you can include in the flow that needs connect to JDE Enterprise Server for <emphasis>your</emphasis> specific <emphasis>JD Edwards EnterpriseOne</emphasis>™ Tools Release</simpara>
<section xml:id="_creating_jde_library_bundle">
<title>Creating JDE Library Bundle</title>
<simpara>The <emphasis>PortX JDE Connector</emphasis> makes use of the libraries of the local JDE Tools release. In order to simplify dependency management for the Mule 4 application, you need to package JDE libraries together into a lib bundle using the provided <emphasis>JDE Libraries Bundle Builder Tool.</emphasis></simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Execute <emphasis>java -jar JDELibrariesBundleBuilderTool-1.0.0.jar</emphasis> with the following parameters (from terminal / command prompt)</simpara>
</listitem>
<listitem>
<simpara>The following parameters apply</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>--<emphasis>destDir</emphasis> for the path where the bundle will be created.</simpara>
</listitem>
<listitem>
<simpara>--<emphasis>jdbcDriver</emphasis> for the full path and filename of the JDBC Driver that applies to you <emphasis>JD Edwards EnterpriseOne</emphasis>™ installation.</simpara>
</listitem>
<listitem>
<simpara>--<emphasis>libDir</emphasis> for the full path containing your JDE Tool release libraries</simpara>
</listitem>
<listitem>
<simpara>--localRepo for the path to your local Maven repository (typically ~/.m2/repository)</simpara>
</listitem>
<listitem>
<simpara>--version for the bundle version (2.0.0-RC1 for current release candidate)</simpara>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<simpara>e.g.:</simpara>
<simpara><emphasis>java -jar JDEToolToBuildLibBundle-1.0.0.jar --destDir "/tmp" –jdbcDriver "/opt/jde/JDBC_Vendor_Drivers/ojdbc7.jar" –libDir "/opt/jde/workingDir/ServerFiles" –version "2.0.0-RC1" --localRepo "/home/user/.m2/repository"</emphasis></simpara>
<simpara>NOTE : All libraries in this path will be added to the library. It is recommended that you copy the required JARs as per your Tools Release, from the libraries path of either the <emphasis>JD Edwards EnterpriseOne</emphasis>™ Enterprise Server, or a Development Client that has been installed from your <emphasis>JD Edwards EnterpriseOne</emphasis>™ Enterprise Server installation). See Appendix A for a detailed list of all files required per your Tools Release</simpara>
<simpara>Once completed the resulting bundle will be located at, following the sample above, /tmp/jde-lib-bundle-2.0.0-RC1.jar</simpara>
</section>
<section xml:id="_install_the_jde_libraries_bundle_into_your_maven_repository">
<title>Install the JDE libraries bundle into your Maven repository</title>
<orderedlist numeration="arabic">
<listitem>
<simpara>Execute the following to make the bundle available in your Maven Repository</simpara>
</listitem>
</orderedlist>
<simpara><emphasis>mvn install:install-file -Dfile=/tmp/jde-lib-bundle-2.0.0-RC1.jar-DgroupId=com.jdedwards -DartifactId=jde-lib-bundle -Dversion=2.0.0-RC1 -Dpackaging=jar</emphasis></simpara>
</section>
<section xml:id="_preparing_maven_for_portx_jde_connector">
<title>Preparing Maven for PortX - JDE Connector</title>
<orderedlist numeration="arabic">
<listitem>
<simpara>Update your settings.xml file (typically ~/.m2 path)</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>In the servers section, add the following:</simpara>
</listitem>
<listitem>
<simpara>Replace the user name and password provided to you via email</simpara>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<programlisting language="java" linenumbering="unnumbered">&lt;server&gt;
    &lt;id&gt;portx-repository-releases&lt;/id&gt;
    &lt;username&gt;youruser&lt;/username&gt;
    &lt;password&gt;yourpassword&lt;/password&gt;
&lt;/server&gt;</programlisting>
</section>
<section xml:id="_adding_portx_jde_license_to_your_mule_runtime">
<title>Adding PortX JDE license to your Mule runtime</title>
<simpara><emphasis>PortX JDE Connector</emphasis> license can be added two ways.</simpara>
<itemizedlist>
<listitem>
<simpara>Copy the license file in the project folder <emphasis>src/main/resources</emphasis></simpara>
</listitem>
<listitem>
<simpara>Copy the license file to Mule installation folder <emphasis>mule/conf</emphasis></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="__emphasis_jd_edwards_enterpriseone_emphasis_server_configuration_requirements">
<title><emphasis>JD Edwards EnterpriseOne</emphasis>™ Server configuration requirements</title>
<simpara>To ensure correct operation of all of the JDE Connector features the Enterprise Server requires the following jde.ini file settings:</simpara>
<simpara>Please refer to <emphasis role="strong">JD Edwards EnterpriseOne Tools Interoperability Guide</emphasis> to check updates, and also provides the different .dll extensions for other platforms.</simpara>
<note>
<simpara>The below .dll files, all relate to the <emphasis>Microsoft Windows</emphasis> platform.</simpara>
</note>
<simpara>This configuration must be done by CNC administrator. Refer to <emphasis role="strong">JD Edwards EnterpriseOne Tools Interoperability Guide</emphasis></simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Ensure that sufficient processes are available for the <emphasis role="strong">XML List Kernel</emphasis></simpara>
</listitem>
</orderedlist>
<programlisting language="java" linenumbering="unnumbered">[JDENET_KERNEL_DEF16]

krnlName=XML List Kernel
dispatchDLLName=xmllist.dll
dispatchDLLFunction=_XMLListDispatch@28
maxNumberOfProcesses=3
numberOfAutoStartProcesses=1</programlisting>
<orderedlist numeration="arabic" startingnumber="2">
<listitem>
<simpara>Ensure that sufficient processes are available for the <emphasis role="strong">XML Dispatch Kernel</emphasis></simpara>
</listitem>
</orderedlist>
<programlisting language="java" linenumbering="unnumbered">[JDENET_KERNEL_DEF22]
dispatchDLLName=xmldispatch.dll
dispatchDLLFunction=_XMLDispatch@28
maxNumberOfProcesses=1
numberOfAutoStartProcesses=1</programlisting>
<orderedlist numeration="arabic" startingnumber="3">
<listitem>
<simpara>Ensure that sufficient processes are available for the <emphasis role="strong">XML Service Kernel</emphasis></simpara>
</listitem>
</orderedlist>
<programlisting language="java" linenumbering="unnumbered">[JDENET_KERNEL_DEF24]
krnlName=XML Service KERNEL
dispatchDLLName=xmlservice.dll
dispatchDLLFunction=_XMLServiceDispatch@28
maxNumberOfProcesses=1
numberOfAutoStartProcesses=0</programlisting>
<orderedlist numeration="arabic" startingnumber="4">
<listitem>
<simpara>Ensure that the <emphasis role="strong">LREngine</emphasis> has a suitable output storage location and sufficient disk allocation</simpara>
</listitem>
</orderedlist>
<programlisting language="java" linenumbering="unnumbered">[LREngine]
System=C:\JDEdwardsPPack\E920\output
Repository_Size=20
Disk_Monitor=YES</programlisting>
<orderedlist numeration="arabic" startingnumber="5">
<listitem>
<simpara>Ensure that the XML Kernels are correctly defined</simpara>
</listitem>
</orderedlist>
<programlisting language="java" linenumbering="unnumbered">[XMLLookupInfo]
XMLRequestType1=list
XMLKernelMessageRange1=5257
XMLKernelHostName1=local
XMLKernelPort1=0

XMLRequestType2=callmethod
XMLKernelMessageRange2=920
XMLKernelHostName2=local
XMLKernelPort2=0

XMLRequestType3=trans
XMLKernelMessageRange3=5001
XMLKernelHostName3=local
XMLKernelPort3=0

XMLRequestType4=JDEMSGWFINTEROP
XMLKernelMessageRange4=4003
XMLKernelHostName4=local
XMLKernelPort4=0
XMLKernelReply4=0

XMLRequestType5=xapicallmethod
XMLKernelMessageRange5=14251
XMLKernelHostName5=local
XMLKernelPort5=0
XMLKernelReply5=0

XMLRequestType6=realTimeEvent
XMLKernelMessageRange6=14251
XMLKernelHostName6=local
XMLKernelPort6=0
XMLKernelReply6=0

XMLRequestType7=ube
XMLKernelHostName7=local
XMLKernelMessageRange7=380
XMLKernelPort7=0
XMLKernelReply7=1</programlisting>
</section>
<section xml:id="_enterprise_server_connection_considerations">
<title>Enterprise Server connection considerations</title>
<itemizedlist>
<listitem>
<simpara>Enable Predefined JDENET Ports in JDE.INI</simpara>
</listitem>
</itemizedlist>
<simpara>When there is a firewall between the Mulesoft ESB and the Enterprise Server, set the PredfinedJDENETPorts setting to 1 in the JDE.INI file of the Enterprise Server. This setting enables JDENET network process to use a predefined range of TCP/IP ports. This port range starts at the port number that is specified by serviceNameListen and ends at the port that is calculated by the equation serviceNameListen = maxNetProcesses - 1. You must open these ports in a firewall setup to successfully connect the Mulesoft ESB to the Enterprise Server.</simpara>
<simpara>Please refer to <emphasis role="strong">JD Edwards EnterpriseOne Tools Security Administration Guide</emphasis> to check updates.</simpara>
</section>
<section xml:id="_configuring_the_ini_files_for_jde_connector">
<title>Configuring the INI Files for JDE Connector</title>
<simpara>The <emphasis>PortX</emphasis> <emphasis>JDE Connector</emphasis> relies on <emphasis>Oracle’s Java Dynamic Connector</emphasis> to establish the link to the server. In order to achieve this, setting the following standard configuration files are required. It is recommended that these be copied from the server to the development machine, as they will be required in all projects using the <emphasis>PortX</emphasis> <emphasis>JDE Connector.</emphasis></simpara>
<itemizedlist>
<listitem>
<simpara>jdbj.ini</simpara>
</listitem>
<listitem>
<simpara>jdeinterop.ini</simpara>
</listitem>
<listitem>
<simpara>jdelog.properties</simpara>
</listitem>
<listitem>
<simpara>tnsnames.ora <emphasis>(for Oracle RDBMS based installations only)</emphasis></simpara>
</listitem>
</itemizedlist>
<simpara>These files are distributed with both <emphasis>Development Clients</emphasis> and/or <emphasis>Enterprise Server</emphasis> modules. Addtional Configuration requirements per file are :</simpara>
<simpara><emphasis><phrase role="underline">JDEINTEROP.INI</phrase></emphasis></simpara>
<programlisting language="ini" linenumbering="unnumbered">[EVENT]
lockEventsYN=N
specialEDITables=&lt;F470462&gt;
validateEnterpriseServicesWith=BOTH
validateEnterpriseServicesUBEName=R0008P_XJDE0001</programlisting>
<simpara>If you need to run the application on CloudHub, you will need to add the section <emphasis role="strong">OCM_SERVERS</emphasis> with the servers that the JDE Connector will use in the connection. The JDE Servers Names are in the column <emphasis role="strong">OMSRVR</emphasis> of <emphasis role="strong">F98611</emphasis> table.</simpara>
<programlisting language="ini" linenumbering="unnumbered">[OCM_SERVERS]
jdeserver01=jdeserver01.yourdomain.com
jdeserver02**=**10.168.45.1</programlisting>
<simpara><emphasis role="strong">NOTE :</emphasis> You can use the DNS name or the IP Address</simpara>
<simpara><emphasis><phrase role="underline">JDELOG.PROPERTIES (optional)</phrase></emphasis></simpara>
<simpara><emphasis role="strong">NOTE :</emphasis> See <emphasis>JD Edwards EnterpriseOne</emphasis>™ documentation for usage</simpara>
<programlisting language="ini" linenumbering="unnumbered">[E1LOG]
FILE=/tmp/jdelog/jderoot.log
LEVEL=SEVERE
FORMAT=APPS
MAXFILESIZE=10MB
MAXBACKUPINDEX=20
COMPONENT=ALL
APPEND=TRUE

#Logging runtime and JAS above APP level will be helpful for application developers.
#Application developers should use this log as a substitute to analyze the flow of events
#in the webclient.
[JASLOG]
FILE=/tmp/jdelog/jas.log
LEVEL=APP
FORMAT=APPS
MAXFILESIZE=10MB
MAXBACKUPINDEX=20
COMPONENT=RUNTIME|JAS|JDBJ
APPEND=TRUE

#Logging runtime and JAS at DEBUG level will be helpful for tools developers.
#Tool developers should use this log ato debug tool level issues
[JASDEBUG]
FILE=/tmp/jdelog/jasdebug.log
LEVEL=DEBUG
FORMAT=TOOLS_THREAD
MAXFILESIZE=10MB
MAXBACKUPINDEX=20
COMPONENT=ALL
APPEND=TRUE</programlisting>
</section>
</section>
<section xml:id="__emphasis_role_strong_anypoint_studio_project_emphasis_portx_jde_connector_emphasis_emphasis">
<title><emphasis role="strong">AnyPoint Studio Project - <emphasis>PortX JDE Connector</emphasis></emphasis></title>
<note>
<simpara>It is recommended that you update AnyPoint Studio before starting with a <emphasis>PortX JDE Connector</emphasis> project.</simpara>
</note>
<section xml:id="_using_the_connector">
<title>Using the Connector</title>
<simpara>You can use the connector to</simpara>
<itemizedlist>
<listitem>
<simpara>Invoke a BSFN on JD Edwards Enterprise Server.</simpara>
</listitem>
<listitem>
<simpara>Invoke a BSFN on JD Edwards Enterprise Server using Transaction Processing.</simpara>
</listitem>
<listitem>
<simpara>Submit a UBE.</simpara>
</listitem>
<listitem>
<simpara>Get UBE Job Status for a UBE using JDE Job Id.</simpara>
</listitem>
<listitem>
<simpara>Get Outbound Events from a JD Edwards Application.</simpara>
</listitem>
<listitem>
<simpara>Get EDI Event from EDI Application.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_creating_a_new_mule_project">
<title>Creating a new Mule Project</title>
<simpara>Create a new Mule Project with Mule Server 4.1.1 EE or greater as runtime:</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="423" contentwidth="321" fileref="images/jde-onboarding/image2_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
</section>
<section xml:id="_project_dependencies">
<title>Project Dependencies</title>
<simpara>In you pom.xml, add the following to you <emphasis>repositories</emphasis> section :</simpara>
<programlisting language="java" linenumbering="unnumbered">&lt;repository&gt;
    &lt;id&gt;portx-repository-releases&lt;/id&gt;
    &lt;name&gt;portx-repository-releases&lt;/name&gt;
    &lt;url&gt;https://portx.jfrog.io/portx/portx-releases&lt;/url&gt;
&lt;/repository&gt;</programlisting>
<simpara>Add the following to you <emphasis>dependencies</emphasis> section :</simpara>
<programlisting language="java" linenumbering="unnumbered">&lt;dependency&gt;
&lt;groupId&gt;com.modus&lt;/groupId&gt;
    &lt;artifactId&gt;mule-jde-connector&lt;/artifactId&gt;
    &lt;version&gt;2.0.0-RC3&lt;/version&gt;
    &lt;classifier&gt;mule-plugin&lt;/classifier&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;com.jdedwards&lt;/groupId&gt;
    &lt;artifactId&gt;jde-lib-bundle&lt;/artifactId&gt;
    &lt;version&gt;2.0.0-RC1&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
<simpara>Add or update the following to you <emphasis>plugins</emphasis> section :</simpara>
<programlisting language="java" linenumbering="unnumbered">&lt;plugin&gt;
    &lt;groupId&gt;org.mule.tools.maven&lt;/groupId&gt;
    &lt;artifactId&gt;mule-maven-plugin&lt;/artifactId&gt;
    &lt;version&gt;$\{mule.maven.plugin.version}&lt;/version&gt;
    &lt;extensions&gt;true&lt;/extensions&gt;
    &lt;configuration&gt;
        &lt;sharedLibraries&gt;
            &lt;sharedLibrary&gt;
                &lt;groupId&gt;com.jdedwards&lt;/groupId&gt;
                &lt;artifactId&gt;jde-lib-bundle&lt;/artifactId&gt;
            &lt;/sharedLibrary&gt;
        &lt;/sharedLibraries&gt;
    &lt;/configuration&gt;
&lt;/plugin&gt;</programlisting>
</section>
<section xml:id="_required_files">
<title>Required files</title>
<simpara>Copy the <emphasis>JD Edwards EntrpriseOne™</emphasis> configuration files to the following folders within the project:</simpara>
<itemizedlist>
<listitem>
<simpara>Project Root</simpara>
</listitem>
<listitem>
<simpara><emphasis>src/main/resources</emphasis></simpara>
</listitem>
</itemizedlist>
<note>
<simpara>If there is a requirement to use different configuration files per environment, you may create separate folders under <emphasis>src/main/resources</emphasis> corresponding to each environment as shown below.</simpara>
</note>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="446" contentwidth="250" fileref="images/jde-onboarding/image3_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>The mule-artifact.json file needs to be updated for each environment as below</simpara>
<programlisting language="json" linenumbering="unnumbered">{
	"minMuleVersion": "4.1.4",
	"classLoaderModelLoaderDescriptor": {
		"id": "mule",
		"attributes": {
			"exportedResources": [
				"JDV920/jdeinterop.ini",
				"JDV920/jdbj.ini",
				"JDV920/tnsnames.ora",
				"JDV920/jdelog.properties",
				"JPY920/jdeinterop.ini",
				"JPY920/jdbj.ini",
				"JPY920/tnsnames.ora",
				"JPY920/jdelog.properties",
				"log4j2.xml"
			],
			"exportedPackages": [
				"JDV920",
				"JPY920"
			],
			"includeTestDependencies": "true"
		}
	}
}</programlisting>
</section>
<section xml:id="_other_considerations">
<title>Other Considerations</title>
<simpara>To redirect the <emphasis>JD Edwards EntrpriseOne™</emphasis> Logger to Mule Logger (allowing you to see the JDE activity in both Console and JDE files defined in the <emphasis>jdelog.properties</emphasis>, you may add the following <emphasis>Async Loggers</emphasis> to <emphasis>log4j2.xml</emphasis> file.</simpara>
<programlisting language="java" linenumbering="unnumbered">&lt;!-- JDE Connector wire logging --&gt;
&lt;AsyncLogger name="org.mule.modules.jde.handle.MuleHandler" level="INFO" /&gt;
&lt;AsyncLogger name="org.mule.modules.jde.JDEConnector" level="INFO" /&gt;</programlisting>
</section>
<section xml:id="_troubleshooting">
<title>Troubleshooting</title>
<simpara>If you are having trouble resolving all dependencies,</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Shut down AnyPoint Studio</simpara>
</listitem>
<listitem>
<simpara>Run the following command in the project root folder from the terminal/command prompt,</simpara>
</listitem>
</orderedlist>
<simpara><emphasis>mvn clean install</emphasis></simpara>
<orderedlist numeration="arabic" startingnumber="3">
<listitem>
<simpara>Open AnyPoint Studio and check dependencies again.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="_configure_the_global_element">
<title>Configure the Global Element</title>
<simpara>To use the <emphasis>PortX JDE Connector</emphasis> in your Mule application, you must configure a global element that can be used by the connector (read more about Global Elements).</simpara>
<simpara>Open the Mule flow for the project, and select the Global Elements tab at the bottom of the Editor Window.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="273" contentwidth="515" fileref="images/jde-onboarding/image4_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Click Create</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="312" contentwidth="511" fileref="images/jde-onboarding/image5_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Type “JDE” in the filter edit box, and select “JDE Config”. Click OK</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="390" contentwidth="386" fileref="images/jde-onboarding/image6_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>On the <emphasis>General</emphasis> tab, enter the required credential and environment</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="383" contentwidth="378" fileref="images/jde-onboarding/image7_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Click <emphasis>Test Connection.</emphasis> You should see the following message appear.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="135" contentwidth="513" fileref="images/jde-onboarding/image8_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<section xml:id="_creating_a_http_listener_for_your_flow">
<title>Creating a HTTP Listener for your flow</title>
<simpara><emphasis role="strong">NOTE :</emphasis> This use case example will create a simple flow to get the address book name from the Address Book table (A/B) invoking the Master Business Function (MBF) on <emphasis>Oracle’s JDE EnterpriseOne</emphasis> Server.</simpara>
<simpara>Go back to the <emphasis>Message Flow</emphasis> tab</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="459" contentwidth="615" fileref="images/jde-onboarding/image9_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>From the Mule Palette (typically top right), select <emphasis>HTTP</emphasis>, and drag Listener to the canvas</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="286" contentwidth="263" fileref="images/jde-onboarding/image10_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Select the <emphasis>HTTP Listener</emphasis> component from the canvas, and inspect the properties window</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="390" contentwidth="655" fileref="images/jde-onboarding/image11_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>The connector requires a <emphasis>Connector Configuration</emphasis>. Click on <emphasis role="strong">Add</emphasis> to create a connector configuration.</simpara>
<simpara>Give the HTTP endpoint a more descriptive name like <emphasis>get-AddressBookName-http-endpoint</emphasis> and press <emphasis role="strong">OK</emphasis> to go back to the global HTTP endpoint dialog box:</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="441" contentwidth="436" fileref="images/jde-onboarding/image12_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Add a path to the URL eg. <emphasis>getaddressbookname.</emphasis></simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="346" contentwidth="641" fileref="images/jde-onboarding/image13_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Click on the MIME Type link, and add a parameter for addressno.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="229" contentwidth="601" fileref="images/jde-onboarding/image14_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Save the project. The connector will be ready to process requests.</simpara>
</section>
<section xml:id="_invoke_a_business_functions">
<title>Invoke a Business Functions</title>
<simpara>Locate the <emphasis role="strong">JDE</emphasis> Connector, and select Call BSFN. Drag this to the canvas.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="236" contentwidth="332" fileref="images/jde-onboarding/image15_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Drag the connector over to the canvas. Select it and review the properties window. Give it a meaningful name eg. Call AddressBookMasterMBF.</simpara>
<simpara>Under the General section, click on the drop-down for Business Function Name.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="305" contentwidth="601" fileref="images/jde-onboarding/image16_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><emphasis role="strong">NOTE :</emphasis> If it is the first time you are selecting a function, this might take a while, as no information has been cached yet. It will need to build a list of all functions available. Please be patient. The status bar (bottom right) will display the following while it is retrieving the metadata.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="30" contentwidth="307" fileref="images/jde-onboarding/image17_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>If the operation fails due to a timeout, please review and change the following.</simpara>
<simpara>After the system has retrieved the required metadata, select AddressBookMasterMBF from the list. The specification metadata will be retrieved from the enterprise server, and put into the project metadata repository.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="283" contentwidth="601" fileref="images/jde-onboarding/image18_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>You may now assign the input parameters. You can do this by either entering the payload values manually, or via the “Show Graphical View” button.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="283" contentwidth="601" fileref="images/jde-onboarding/image19_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Drag the inputs to outputs, or double-click the output parameter to add to your edit window, and change as required. Be sure to map your query parameter to the function mnAddressBookNumber</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="271" contentwidth="601" fileref="images/jde-onboarding/image20_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
</section>
</section>
<section xml:id="_set_payload_output">
<title>Set Payload Output</title>
<simpara>In the Mule Palette, you can either select Core, scroll down to Transformers or type “Payload” in the search bar.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="246" contentwidth="325" fileref="images/jde-onboarding/image21_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Drag and drop the <emphasis>Set Payload</emphasis> to your canvas.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="211" contentwidth="332" fileref="images/jde-onboarding/image22_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Select the Set Payload component, and review the properties.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="157" contentwidth="601" fileref="images/jde-onboarding/image23_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Change the payload to reflect the desired output, and save the project</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="178" contentwidth="601" fileref="images/jde-onboarding/image24_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
</section>
<section xml:id="_testing_the_mule_flow">
<title>Testing the Mule Flow</title>
<simpara>To Test your flow, you need to start the Mule application. Go to the <emphasis>Run</emphasis> menu, and select <emphasis>Run</emphasis>.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="376" contentwidth="567" fileref="images/jde-onboarding/image25_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>After the project has been deployed, you can test you flow by typing the URL into a web browser eg. <link xlink:href="http://localhost:8081/getaddressbookname?addressno=1">http://localhost:8081/getaddressbookname?addressno=1</link></simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata contentdepth="88" contentwidth="601" fileref="images/jde-onboarding/image26_getting_started.png"/>
</imageobject>
<textobject><phrase>image</phrase></textobject>
</inlinemediaobject></simpara>
</section>
</section>
<section xml:id="__emphasis_role_strong_emphasis_portx_jde_connector_emphasis_demo_applications_emphasis">
<title><emphasis role="strong"><emphasis>PortX JDE Connector</emphasis> – Demo Applications</emphasis></title>
<section xml:id="_example_project">
<title>Example Project</title>
<simpara>You can download the example source that was created in the Getting Started Guide from</simpara>
</section>
<section xml:id="_additional_demos">
<title>Additional Demos</title>
<simpara>There are additional demo applications with step by step guides available for download. These cover all the basic operations, and are :</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Invoke a Business Function (BSFN) on the server using Transaction Processing.</simpara>
</listitem>
<listitem>
<simpara>Submit a Batch Process / Report</simpara>
</listitem>
<listitem>
<simpara>Check a Batch Process / Report status asynchronously</simpara>
</listitem>
<listitem>
<simpara>Poll Real Time / Guaranteed Events</simpara>
</listitem>
<listitem>
<simpara>Poll EDI Events</simpara>
</listitem>
</orderedlist>
</section>
</section>
<section xml:id="__emphasis_role_strong_appendix_a_required_jars_by_tools_release_emphasis">
<title><emphasis role="strong">Appendix A : Required JARs by Tools Release</emphasis></title>
<section xml:id="_tools_release_8_98">
<title>Tools Release 8.98</title>
<simpara>Copy these files:</simpara>
<itemizedlist>
<listitem>
<simpara>ApplicationAPIs_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>ApplicationLogic_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Base_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>BizLogicContainer_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>BizLogicContainerClient_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>BusinessLogicServices_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>castor.jar</simpara>
</listitem>
<listitem>
<simpara>commons-httpclient-3.0.jar</simpara>
</listitem>
<listitem>
<simpara>commons-logging.jar</simpara>
</listitem>
<listitem>
<simpara>Connector.jar</simpara>
</listitem>
<listitem>
<simpara>EventProcessor_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Generator.jar</simpara>
</listitem>
<listitem>
<simpara>j2ee1_3.jar</simpara>
</listitem>
<listitem>
<simpara>JdbjBase_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>JdbjInterfaces_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>JdeNet_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>jmxremote.jar</simpara>
</listitem>
<listitem>
<simpara>jmxremote_optional.jar</simpara>
</listitem>
<listitem>
<simpara>jmxri.jar</simpara>
</listitem>
<listitem>
<simpara>log4j.jar</simpara>
</listitem>
<listitem>
<simpara>ManagementAgent_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Metadata.jar</simpara>
</listitem>
<listitem>
<simpara>MetadataInterface.jar</simpara>
</listitem>
<listitem>
<simpara>PMApi_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Spec_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>System_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>SystemInterfaces_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>xmlparserv2.jar</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_tools_releases_9_1_prior_update_4">
<title>Tools Releases 9.1 prior Update 4</title>
<simpara>Copy these files:</simpara>
<itemizedlist>
<listitem>
<simpara>ApplicationAPIs_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>ApplicationLogic_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Base_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>BizLogicContainer_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>BizLogicContainerClient_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>BusinessLogicServices_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>castor.jar</simpara>
</listitem>
<listitem>
<simpara>commons-httpclient-3.0.jar</simpara>
</listitem>
<listitem>
<simpara>commons-logging.jar</simpara>
</listitem>
<listitem>
<simpara>Connector_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>EventProcessor_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Generator.jar</simpara>
</listitem>
<listitem>
<simpara>JdbjBase_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>JdbjInterfaces_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>JdeNet_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>jmxremote.jar</simpara>
</listitem>
<listitem>
<simpara>jmxremote_optional.jar</simpara>
</listitem>
<listitem>
<simpara>jmxri.jar</simpara>
</listitem>
<listitem>
<simpara>ManagementAgent_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Metadata.jar</simpara>
</listitem>
<listitem>
<simpara>MetadataInterface.jar</simpara>
</listitem>
<listitem>
<simpara>PMApi_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Spec_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>System_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>SystemInterfaces_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>xmlparserv2.jar</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_tools_releases_9_1_update_4_and_later_updates">
<title>Tools Releases 9.1 Update 4 and later updates</title>
<simpara>Copy these files:</simpara>
<itemizedlist>
<listitem>
<simpara>ApplicationAPIs_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>ApplicationLogic_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Base_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>BizLogicContainer_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>BizLogicContainerClient_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>BusinessLogicServices_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>castor.jar</simpara>
</listitem>
<listitem>
<simpara>commons-codec.jar</simpara>
</listitem>
<listitem>
<simpara>commons-lang2.6.jar</simpara>
</listitem>
<listitem>
<simpara>commons-logging.jar</simpara>
</listitem>
<listitem>
<simpara>Connector.jar</simpara>
</listitem>
<listitem>
<simpara>EventProcessor_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Generator_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>httpclient.jar</simpara>
</listitem>
<listitem>
<simpara>httpcore.jar</simpara>
</listitem>
<listitem>
<simpara>httpmime.jar</simpara>
</listitem>
<listitem>
<simpara>j2ee1_3.jar</simpara>
</listitem>
<listitem>
<simpara>JdbjBase_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>JdbjInterfaces_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>JdeNet_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>jmxremote.jar</simpara>
</listitem>
<listitem>
<simpara>jmxremote_optional.jar</simpara>
</listitem>
<listitem>
<simpara>jmxri.jar</simpara>
</listitem>
<listitem>
<simpara>ManagementAgent_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Metadata.jar</simpara>
</listitem>
<listitem>
<simpara>MetadataInterface.jar</simpara>
</listitem>
<listitem>
<simpara>PMApi_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Spec_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>System_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>SystemInterfaces_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>xml-apis.jar</simpara>
</listitem>
<listitem>
<simpara>xmlparserv2.jar</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_tools_releases_9_2_and_later">
<title>Tools Releases 9.2 and later</title>
<simpara>Copy these files:</simpara>
<itemizedlist>
<listitem>
<simpara>ApplicationAPIs_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>ApplicationLogic_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Base_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>BizLogicContainer_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>BizLogicContainerClient_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>BusinessLogicServices_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>commons-codec.jar</simpara>
</listitem>
<listitem>
<simpara>castor.jar</simpara>
</listitem>
<listitem>
<simpara>commons-lang2.6.jar</simpara>
</listitem>
<listitem>
<simpara>commons-logging.jar</simpara>
</listitem>
<listitem>
<simpara>Connector.jar</simpara>
</listitem>
<listitem>
<simpara>EventProcessor_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Generator.jar</simpara>
</listitem>
<listitem>
<simpara>httpclient.jar</simpara>
</listitem>
<listitem>
<simpara>httpcore.jar</simpara>
</listitem>
<listitem>
<simpara>httpmime.jar</simpara>
</listitem>
<listitem>
<simpara>j2ee1_3.jar</simpara>
</listitem>
<listitem>
<simpara>JdbjBase_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>JdbjInterfaces_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>JdeNet_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>jmxremote.jar</simpara>
</listitem>
<listitem>
<simpara>jmxremote_optional.jar</simpara>
</listitem>
<listitem>
<simpara>jmxri.jar</simpara>
</listitem>
<listitem>
<simpara>ManagementAgent_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Metadata.jar</simpara>
</listitem>
<listitem>
<simpara>MetadataInterface.jar</simpara>
</listitem>
<listitem>
<simpara>PMApi_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>Spec_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>System_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>SystemInterfaces_JAR.jar</simpara>
</listitem>
<listitem>
<simpara>xerces.jar</simpara>
</listitem>
<listitem>
<simpara>xml-apis.jar</simpara>
</listitem>
<listitem>
<simpara>xmlparserv2.jar</simpara>
</listitem>
</itemizedlist>
</section>
</section>
</article>